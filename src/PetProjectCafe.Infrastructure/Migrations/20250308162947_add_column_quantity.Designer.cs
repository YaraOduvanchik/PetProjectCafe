// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PetProjectCafe.Infrastructure;

#nullable disable

namespace PetProjectCafe.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250308162947_add_column_quantity")]
    partial class add_column_quantity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PetProjectCafe.Domain.Menus.Menu", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.ComplexProperty<Dictionary<string, object>>("Name", "PetProjectCafe.Domain.Menus.Menu.Name#Name", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("name_value");
                        });

                    b.HasKey("Id")
                        .HasName("pk_menus");

                    b.ToTable("menus", (string)null);
                });

            modelBuilder.Entity("PetProjectCafe.Domain.Menus.MenuItem", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("MenuId")
                        .HasColumnType("uuid")
                        .HasColumnName("menu_id");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric")
                        .HasColumnName("price");

                    b.ComplexProperty<Dictionary<string, object>>("Name", "PetProjectCafe.Domain.Menus.MenuItem.Name#Name", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("name_value");
                        });

                    b.HasKey("Id")
                        .HasName("pk_menu_items");

                    b.HasIndex("MenuId")
                        .HasDatabaseName("ix_menu_items_menu_id");

                    b.ToTable("menu_items", (string)null);
                });

            modelBuilder.Entity("PetProjectCafe.Domain.Orders.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("DateAndTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_and_time");

                    b.ComplexProperty<Dictionary<string, object>>("ClientName", "PetProjectCafe.Domain.Orders.Order.ClientName#Name", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("client_name_value");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("PaymentMethod", "PetProjectCafe.Domain.Orders.Order.PaymentMethod#PaymentMethod", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("payment_method_value");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Status", "PetProjectCafe.Domain.Orders.Order.Status#OrderStatus", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("status_value");
                        });

                    b.HasKey("Id")
                        .HasName("pk_orders");

                    b.ToTable("orders", (string)null);
                });

            modelBuilder.Entity("PetProjectCafe.Domain.Orders.OrderItem", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uuid")
                        .HasColumnName("order_id");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("quantity");

                    b.ComplexProperty<Dictionary<string, object>>("MenuItemId", "PetProjectCafe.Domain.Orders.OrderItem.MenuItemId#MenuItemId", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<Guid>("Value")
                                .HasColumnType("uuid")
                                .HasColumnName("menu_item_id_value");
                        });

                    b.HasKey("Id")
                        .HasName("pk_order_items");

                    b.HasIndex("OrderId")
                        .HasDatabaseName("ix_order_items_order_id");

                    b.ToTable("order_items", (string)null);
                });

            modelBuilder.Entity("PetProjectCafe.Domain.Menus.MenuItem", b =>
                {
                    b.HasOne("PetProjectCafe.Domain.Menus.Menu", null)
                        .WithMany("MenuItems")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_menu_items_menus_menu_id");
                });

            modelBuilder.Entity("PetProjectCafe.Domain.Orders.OrderItem", b =>
                {
                    b.HasOne("PetProjectCafe.Domain.Orders.Order", null)
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_order_items_orders_order_id");
                });

            modelBuilder.Entity("PetProjectCafe.Domain.Menus.Menu", b =>
                {
                    b.Navigation("MenuItems");
                });

            modelBuilder.Entity("PetProjectCafe.Domain.Orders.Order", b =>
                {
                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
